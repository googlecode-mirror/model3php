= Las Bases =
Este es el primer documento que debes leer, con esto tendras una breve introduccion en general a los frameworks MVC para PHP y en particular a Model3PHP, de hecho yo creo que este documento podria servir a usuarios que estan aprendiendo otros frameworks MVC, el uso no es igual en todos pero muchos conceptos son identicos.

== Frameworks ==
Los frameworks, en este contexto, son clases o librerias que nos proporcionan una base para iniciar algun proyecto, la mayoria de las veces nos dan funcionalidad generica que cada equipo puede extender o personalizar segun sus necesidades, nos ayudan con tareas sencillas que generalmente se repiten en cada proyecto y en algunos casos nos ayudan a estructurar nuestro codigo de alguna manera poniendo algunas reglas, lo que a la larga hara que nuestro codigo este mas organizado y sea mas facil mantenerlo.

Una regla que siempre debes seguir al trabajar con un framework es:

El codigo del framework nunca se debe modificar, siempre se debe extender, es decir en caso de que una funcionalidad no cumpla con tus necesidades no debes modificar el framework debes extenderlo para cubrir tus necesidades.

http://en.wikipedia.org/wiki/Software_framework

== Patrones de dise침o ==
Consulten http://en.wikipedia.org/wiki/Design_pattern

=== MVC ===
MVC (Modelo - Vista - Controlador) es un patron de dise침o, usado en ingenieria de software el cual nos ayuda con la arquitectura de nuestras aplicaciones. La idea es separar nuestra aplicacion en 3 componentes:

 * Los Modelos, que manejan los datos de la aplicaci칩n.
 * La Vista, la cual se encarga de manejar la interfaz de usuario.
 * El controlador, el cual maneja la logica de control.

En una aplicacion comun, el usuario interactua con la Vista, el Controlador recibe la notificacion del evento y hace uso de los Modelos necesarios para cumplir la tarea despues le regresa datos a la Vista para desplegar el resultado de la interaccion.

http://es.wikipedia.org/wiki/Modelo_Vista_Controlador

=== Front Controller ===

Este patron de dise침o se ocupa de dar una entrada centralizada o todas las peticiones al sistema.

http://en.wikipedia.org/wiki/Front_controller

== Usando Model3 ==

Model3 usa el patron MVC para dividir la aplicacion, de este modo es que tendremos una carpeta Model en la cual estaran todas las clases que manejan datos o logica de negocio.

Se recomienda que para las clases que controlan tablas en la base de datos se genere una clase por tabla.

Ahora la logica de control se maneja a traves de los Controladores estos a su vez se comoponen de Acciones y para cada Accion se tendra una Vista relacionada, los Controlodares pueden agrupar varias acciones relacionadas por ejemplo, podriamos tener un Controlador "Users" que tenga las Acciones "list", "add" y "delete" cada una de esta Acciones a sus vez estaria relacionada con una Vista la cual ayudaria a desplegar la info necesaria por ejemplo la Vista "list" podria tener una tabla listando todos los usuarios de la aplicacion y la Vista "add" podria tener un formulario para incluir los datos del usuario.

Los Controladores se encontraran en la carpeta Controller y el archivo se llamara NombreController.php (iniciando con mayuscula, usando UpperCamelCase) cada archivo tendra una clase llamada NombreController la cual hereda de Model3_Controller. Cada accion sera un metodo de dicha clase y se nombrara nombreAction (iniciando con minuscula, usando lowerCamelCase).

Las Vistas se encontraran dentro de la carpeta View/Scripts/ y ahi dentro existira una carpeta con el nombre del Controlador y dentro de ella archiovos php con los nombres de las acciones (sin la palabra Action).

Las aplicaciones usan la URL para identificar que controlador y accion se esta usando, ademas de los parametros, y usa la siguiente estructura:

{{{
http://dominio/NombreControlador/nombreAccion/nombreParametro1/valorParametro1/nombreParametro2/valorParametro2
}}}

==== Ligando informacion entre la accion y la vista ====

Cuando llegamos a una Accion dentro de nuestro sistema esta debe hacer lo necesario para responder al usuario, para ello la accion puede instanciar y usar cualquier Modelo, la informacion resultante se debe pasar a la propiedad "view" de la clase Model3_Controller y se podra usar desde la vista con la variable $view, por ejemplo en la accion se podria escribir 

{{{
$this->view->resultado = 'Hola Mundo';
}}}

Y en la Vista tendriamos que 

{{{
echo $view->resultado;
}}}

Imprimiria un 'Hola Mundo'.

==== Formando ligas ====

Para formar links a otras paginas de nuestro mismo sitio web se usara la funcion url de la clase Model3_View la cual recibe un arreglo asociativo el cual podra especificar el elemento "controller" y el elemento "action", cualquier otro elemento sera usado como parametro, por ejemplo si en una vista escribimos 

{{{
$view->url(array('controller'=>'Admin', 'action'=>'settings', 'par1'=>'val1'));
}}}

Formara la url http://dominio/Admin/settings/par1/val1

==== BaseUrl ====

Al usar elementos como imagenes, archivos js o css, es importante usar siempre la funcion baseUrl() de la clase Model3_View y despues tomar en cuenta todo desde la carpeta public por ejemplo: 

{{{
<img src="<?php echo $view->url('/images/imgPrueba.jpg') ?>" />
}}}

Pues bien esto es lo minimo que se debe saber antes de usar Model3, existen otros conceptos mas avanzados que iremos tratando mas adelante pero por lo pronto ya estan listos para pasar a InicioRapido y comenzar con su primera aplicacion de ejemplo.